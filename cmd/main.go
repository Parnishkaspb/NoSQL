// package main
//
// import (
//
//	"NoSQL/internal/http"
//
// )
//
//	func main() {
//		http.StartServer()
//	}
package main

import (
	"NoSQL/internal/http"
	"context"
	"log"
	"os"
	"os/signal"
	"syscall"
)

func main() {
	ctx, cancel := context.WithCancel(context.Background())
	defer cancel()

	// –ü–µ—Ä–µ—Ö–≤–∞—Ç SIGINT –∏ SIGTERM
	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM)

	// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
	server := http.NewServer()
	go func() {
		if err := server.Start(ctx); err != nil {
			log.Fatalf("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
		}
	}()

	// –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞
	<-sigChan
	log.Println("üßπ –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–æ —Å–∏–≥–Ω–∞–ª—É...")
	cancel() // –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç ctx.Done()
}
